Voc√™ √© um desenvolvedor s√™nior especialista em front-end moderno com foco em responsividade, acessibilidade, performance e design elegante. O projeto √© um sistema de afiliados que j√° est√° funcional, com rotas separadas para admin (/admin/*) e afiliados (/home, /betting-houses, /my-links, etc.).

## OBJETIVO:
Melhorar a responsividade e experi√™ncia do usu√°rio em todo o sistema. A aplica√ß√£o deve se comportar perfeitamente em:
- Celulares (320px+)
- Tablets (768px+)
- Laptops (1024px+)
- Monitores grandes (1440px+)

---

## üéØ INSTRU√á√ïES PARA A RESPONSIVIDADE GLOBAL:

### 1. üîÑ Layouts adapt√°veis
- Use `flex` e `grid` com `gap` e `auto-fit/minmax` em `TailwindCSS` para containers.
- Evite valores fixos (`w-[300px]`, `h-[400px]`), prefira `w-full`, `max-w-*`, `aspect-video`, etc.
- Use `container mx-auto px-4 sm:px-6 lg:px-8` como base de layout.

### 2. üì± Navbar e Sidebar
- Sidebar fixa em telas grandes (>=1024px) e collaps√°vel em mobile.
- Menu hamburguer para mobile com transi√ß√£o suave (framer-motion ou Tailwind transitions).
- √çcones com tooltips vis√≠veis apenas em desktop (e escondidos no mobile).
- Responsivo com `hidden lg:block` e `block lg:hidden` para controle de visibilidade.

### 3. üìä Tabelas
- Em mobile, usar `overflow-x-auto` com `min-w-[600px]` em tabelas.
- Alternativamente, exibir dados em cards (grid ou stack) com colapsadores (`Disclosure` ou `Accordion`).
- As colunas importantes devem ter `text-xs sm:text-sm lg:text-base`.

### 4. üß© Componentes
- Todos os componentes devem ser mobile-first e adapt√°veis com breakpoints (`sm`, `md`, `lg`, `xl`, `2xl`).
- `Cards`, `Forms`, `Toasts`, `Modals`, `Tables`, `Buttons`, `Menus` devem ser testados em v√°rias resolu√ß√µes.
- Elementos devem ter `rounded`, `shadow`, `p-4`, e `gap-4` por padr√£o, adaptando com breakpoints.

### 5. üñ• Dashboard e KPIs
- KPIs devem ser organizados em `grid-cols-1 sm:grid-cols-2 lg:grid-cols-4`.
- √çcones e textos devem escalar bem: `text-base md:text-lg xl:text-xl`.
- Evite excesso de colunas em monitores pequenos.

### 6. ‚ú® Formul√°rios
- Inputs com `w-full`, labels em cima ou flutuantes.
- Grids para campos lado a lado em telas grandes: `grid-cols-1 sm:grid-cols-2 lg:grid-cols-3`.
- Bot√µes adapt√°veis com `text-xs sm:text-sm md:text-base`.

### 7. üåô Dark Mode
- Garantir contraste e legibilidade em todos os breakpoints.
- Classes condicionais com `dark:bg-*` e `dark:text-*`.

### 8. üìà Performance & UX
- Use `lazy loading` em imagens e componentes pesados.
- Use `@media` queries somente quando necess√°rio, priorize utilit√°rios do Tailwind.
- Evite scroll horizontal com cuidado: `overflow-x-hidden` nos layouts base.
- Componentes como `<Drawer />`, `<BottomSheet />`, `<DropdownMenu />` devem se adaptar conforme o device.

---

## üß† EXTRA:
- Usar Tailwind `screen` breakpoints: `sm`, `md`, `lg`, `xl`, `2xl`.
- Utilizar plugins como `@tailwindcss/aspect-ratio`, `@tailwindcss/forms`, `@tailwindcss/typography`.
- Testar com DevTools nas larguras: 375px, 768px, 1024px, 1440px, 1920px.
- Garantir que textos n√£o quebrem nem virem `...` sem tooltip.
- Modais e alertas centralizados verticalmente com comportamento consistente.

---

## üíº PAGINAS QUE DEVEM SER TESTADAS:
- `/login`, `/register`
- `/home`, `/betting-houses`, `/my-links`, `/profile`, `/payments`, `/reports`
- `/admin`, `/admin/manage`, `/admin/bettings`, `/admin/payments`, `/admin/dashboard`

---

## üîß TECNOLOGIAS:
- TailwindCSS 3+
- React (ou framework atual)
- Suporte a dark mode (via classe ou sistema preferencial)
- Sistema modular e componentizado
