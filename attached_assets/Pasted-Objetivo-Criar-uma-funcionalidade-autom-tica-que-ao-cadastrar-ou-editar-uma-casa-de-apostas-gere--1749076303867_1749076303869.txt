Objetivo:
Criar uma funcionalidade autom√°tica que, ao cadastrar ou editar uma casa de apostas, gere e exiba automaticamente os postbacks padr√£o para os eventos: click, register, deposit, revenue, com URLs din√¢micas baseadas em um token exclusivo da casa. O token n√£o deve ser alter√°vel manualmente. Tamb√©m ser√° necess√°rio visualizar, copiar, auditar e gerenciar esses postbacks na interface do sistema.

1. Ao Criar uma Casa de Apostas:
Gere automaticamente um token seguro e √∫nico (UUID ou semelhante).

Salve este token no banco e n√£o permita edi√ß√£o posterior.

Imediatamente ap√≥s a cria√ß√£o da casa, crie automaticamente 4 postbacks padr√µes:

/postback/click?token={token}

/postback/register?token={token}

/postback/deposit?token={token}

/postback/revenue?token={token}

Armazene cada postback vinculado √† casa (por ID ou token).

Permitir visualiza√ß√£o pr√©via dos postbacks gerados na tela de cria√ß√£o (antes de clicar em "Criar Casa").

2. Ao Editar uma Casa:
Exiba os mesmos 4 postbacks gerados inicialmente.

Permita apenas copiar os links.

Impe√ßa altera√ß√£o do token e dos postbacks j√° existentes.

Permita adicionar postbacks extras (customizados), com controle de evento, status e URL.

Interface igual √† cria√ß√£o: com campos vis√≠veis para o token e todos os postbacks habilitados ou n√£o (checkboxes de Click, Registro, Dep√≥sito, Lucro).

3. Modal de Postbacks (A√ß√µes da Casa):
Exibir todos os postbacks configurados automaticamente e manualmente.

Cada postback deve ter:

Tipo de evento

Status (Ativo/Inativo)

URL gerada com token (copi√°vel)

Bot√£o "+ Adicionar Postback" para novos personalizados.

Interface deve permitir copiar cada URL.

Indicar claramente se foi "gerado automaticamente" ou "adicionado manualmente".

4. Estrutura das Rotas de Postback (Servidor):
Use o padr√£o:

bash
Copiar
Editar
/postback/{evento}?token={token}
Eventos poss√≠veis: click, register, deposit, revenue

Com base no token, identifique a casa associada.

Valide o token e evento antes de processar.

Armazene todos os hits de postback em um log/auditoria para consultas futuras:

Casa associada

Tipo de evento

Timestamp

Dados do request

IP/origem

5. Requisitos T√©cnicos Importantes:
Gere token de forma segura, inalter√°vel.

Os postbacks devem ser √∫nicos por casa, mas com padr√£o igual para todas.

A interface deve ter:

Visualiza√ß√£o por evento

Bot√£o ‚ÄúCopiar link‚Äù

Bot√£o ‚ÄúAtivar/Inativar‚Äù

Indica√ß√£o de origem (autom√°tico/manual)

6. UX/UI:
As telas de cria√ß√£o e edi√ß√£o devem exibir os postbacks com links prontos.

O usu√°rio deve poder copiar e mandar para o parceiro facilmente.

Todos os postbacks devem estar organizados por tipo.

O modal de postbacks deve funcionar tanto para visualiza√ß√£o quanto para gerenciamento.

üß† Dicas Adicionais para a IA ou Dev:
Crie uma fun√ß√£o utilit√°ria que recebe o tipo de evento e o token e monta a URL.

Tenha uma tabela postbacks com os campos: id, casa_id, evento, url, status, automatico, criado_em.

Valide que o mesmo evento n√£o seja criado duas vezes para a mesma casa automaticamente.

Prefira tokens no formato token_{timestamp}_{stringAleatoria}.

