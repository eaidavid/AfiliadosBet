‚ö†Ô∏è LEMBRETE:  
Antes de iniciar, **lembre-se do padr√£o global de refatora√ß√£o que j√° foi fornecido anteriormente.**  
**Cada linha de c√≥digo, componente e decis√£o deve seguir rigorosamente os padr√µes de c√≥digo, design, UX e performance.**

---

üîß EXECUTE A FASE 2 ‚Äì NAVEGA√á√ÉO E UX DO SISTEMA AFILIADOSBET

üìå Tarefas detalhadas:

### üîπ 2.1 Menu Inferior Inteligente
- Crie uma **√∫nica navega√ß√£o inferior** reutiliz√°vel e adapt√°vel ao contexto atual (usu√°rio ou admin).
- A navega√ß√£o deve:
  - **Detectar dinamicamente** o tipo de usu√°rio (admin ou comum).
  - Exibir **apenas as rotas relevantes** para o tipo de usu√°rio.
  - **Incluir todas as rotas essenciais** com fallback para rotas ausentes.
  - Ter **√≠cones e r√≥tulos claros**, e **indicador visual da p√°gina ativa** (ex: highlight, underline, etc.).
  - Ser **responsiva e fluida** tanto para mobile quanto para desktop (no mobile, ocupar posi√ß√£o fixa; no desktop, opcional ou ausente).

### üîπ 2.2 Sistema de Navega√ß√£o Unificado
- **Padronize toda a navega√ß√£o** entre desktop e mobile, removendo qualquer l√≥gica duplicada.
- Implemente:
  - **Transi√ß√µes suaves** entre p√°ginas (ex: com Framer Motion, se compat√≠vel com a stack).
  - Um sistema de **breadcrumbs reutiliz√°vel e claro** (ex: Home > Relat√≥rios > Comiss√£o).
  - L√≥gica inteligente para breadcrumbs detectar dinamicamente o caminho, com fallback leg√≠vel.
  - **Melhorias de UX**, como foco autom√°tico em p√°ginas, rolagem suave, reten√ß√£o de scroll, e resposta r√°pida nos cliques.

### üß† MELHORIAS RECOMENDADAS (opcional mas fortemente indicadas)
- Centralize a configura√ß√£o de rotas em um `routes.config.ts` reutiliz√°vel para o menu inferior e breadcrumbs.
- Crie hook `useNavigationContext()` para detectar rota atual e tipo de usu√°rio.
- Adicione anima√ß√µes de entrada e sa√≠da nas p√°ginas com context-aware transition.
- Garanta **acessibilidade b√°sica** nos elementos de navega√ß√£o (roles, aria-labels).

---

‚ö†Ô∏è IMPORTANTE:
Siga todos os padr√µes j√° definidos de:
- C√≥digo limpo (TypeScript strict, hooks, nomenclatura consistente)
- Design moderno (Tailwind + shadcn/ui, tema escuro, glassmorphism)
- UX premium (transi√ß√µes suaves, feedback visual, carregamentos elegantes)
- Performance (lazy loading, bundle leve, otimiza√ß√£o de re-renders)

---

‚úÖ **NO FINAL DA EXECU√á√ÉO**, FA√áA UM RESUMO COM:

1. Componentes criados
2. L√≥gicas implementadas
3. Arquivos removidos/unificados
4. Melhorias visuais aplicadas
5. Sugest√µes de pr√≥xima etapa (se aplic√°vel)
6. Eventuais limita√ß√µes encontradas

üõë Se voc√™ esquecer algum padr√£o ou fizer algo fora do escopo, pare, revise e recomece seguindo o padr√£o.

Agora, execute com excel√™ncia. üöÄ
